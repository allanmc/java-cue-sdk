package dk.allanmc.cuesdk.jna;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * contains number of leds and arrays with their positions<br>
 * <i>native declaration : target\CUESDK\include\CUESDK.h:91</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CorsairLedPositions extends Structure {
	/** integer value.Number of elements in following array */
	public int numberOfLed;
	/**
	 * array of led positions<br>
	 * C type : CorsairLedPosition*
	 */
	public dk.allanmc.cuesdk.jna.CorsairLedPosition.ByReference pLedPosition;
	public CorsairLedPositions() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("numberOfLed", "pLedPosition");
	}
	/**
	 * @param numberOfLed integer value.Number of elements in following array<br>
	 * @param pLedPosition array of led positions<br>
	 * C type : CorsairLedPosition*
	 */
	public CorsairLedPositions(int numberOfLed, dk.allanmc.cuesdk.jna.CorsairLedPosition.ByReference pLedPosition) {
		super();
		this.numberOfLed = numberOfLed;
		this.pLedPosition = pLedPosition;
	}
	public CorsairLedPositions(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends CorsairLedPositions implements Structure.ByReference {
		
	};
	public static class ByValue extends CorsairLedPositions implements Structure.ByValue {
		
	};
}
