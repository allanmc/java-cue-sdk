package dk.allanmc.cuesdk.jna;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * contains led id and position of led rectangle.Most of the keys are rectangular.In case if key is not rectangular(like Enter in ISO / UK layout) it returns the smallest rectangle that fully contains the key<br>
 * <i>native declaration : target\CUESDK\include\CUESDK.h:82</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CorsairLedPosition extends Structure {
	/**
	 * @see CorsairLedId<br>
	 * identifier of led<br>
	 * C type : CorsairLedId
	 */
	public int ledId;
	public double top;
	public double left;
	public double height;
	/** values in mm */
	public double width;
	public CorsairLedPosition() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ledId", "top", "left", "height", "width");
	}
	/**
	 * @param ledId @see CorsairLedId<br>
	 * identifier of led<br>
	 * C type : CorsairLedId<br>
	 * @param width values in mm
	 */
	public CorsairLedPosition(int ledId, double top, double left, double height, double width) {
		super();
		this.ledId = ledId;
		this.top = top;
		this.left = left;
		this.height = height;
		this.width = width;
	}
	public CorsairLedPosition(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends CorsairLedPosition implements Structure.ByReference {
		
	};
	public static class ByValue extends CorsairLedPosition implements Structure.ByValue {
		
	};
}
